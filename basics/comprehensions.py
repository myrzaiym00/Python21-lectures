"========================Comprehensions====================="
# comprehension - генерация последовательностей в одну строку используя цикл


# 1. действие for элемент in итерируемый объект
# 2. действие for элемент in итерируемый объект if фильтр


"=======================List Comprehensions=================="

"""создать список состоящий из чисел от 1 до 10""" 
list_ = []
for i in range(1,11):
    list_.append(i)
# list_ = [1,2,3,4,5,6,7,8,9,10]

list_ = list((i for i in range(1,11)))
# list_ = [1,2,3,4,5,6,7,8,9,10]

"""создать список состоящий из чисел от 1 до 10 умноженных на 2"""
list_ = list((i*2 for i in range(1,11)))
# list_ = [2,4,6,8,10,12,14,16,18,20]

"""создать список состоящий из чисел от 1 до 10 в квадрате"""
list_ = [i**2 for i in range(1,11)]
# list_ = [1,4,9,16,25,36,49,64,81,100]

"""создать список состоящий из четных чисел от 1 до 10"""
list_ = []
for i in range(1,11):
    if not i % 2:
        list_.append(i)
    
list_ = [i for i in range(1,11) if not i%2]

list_ = [i for i in range(2,11,2)]

#list_ = [2,4,6,8,19]

list_ = [print(i) for i in range(10)]
# [None,None,None,None,None,None,None,None,None,None]

list_ = ["hello" for i in range(10)]
# ["hello","hello","hello","hello","hello","hello","hello","hello","hello","hello"]

print([input() for i in range(10)])
# на каждой итерации запрашивает input

"""Создать список состоящий из чисел от 1 до 10, но вместо чисел написать 'четное' или 'нечетное'"""
list_ = ['нечетное' if i % 2 else 'четное' for i in range(1,11)]
# ['нечетное','четное','нечетное','четное','нечетное','четное','нечетное','четное','нечетное','четное']

"""создать список чисел находящихся в list1, заменив их на 'четное' или 'нечетное'"""
list1 = [1,"hello",3,"a",4.0,6,8,'hw']
list_ = ['нечетное' if i % 2 else 'четное' 
         for i in list1 
         if type(i) == int or type(i) == float]


"=====================Dictionary Comprehensions====================="

"""Создать словарь, где ключи - числа от 1 до 10, a значения эти числа ввиде строки"""
dict_ = dict((i, str(i)) for i in range(1,11))
# {1:'1',2:'2',3:'3',4:'4',5:'5',6:'6',7:'7',8:'8',9:'9',10:'10'}

"""Даны 2 списка, создайте словарь, где ключи - элементы первого списка, а значения - второго"""
list1 = [1,2,3,4,5]
list2 = ["a","b","c","d","e"]

dict_ = dict( (list1[index], list2[index]) for index in range(len(list1)) )
# {1:'a', 2:'b', 3:'c', 4:'d', 5:'e'}

dict_ = { list1[index]:list2[index] for index in range(len(list1))} 
# {1:'a', 2:'b', 3:'c', 4:'d', 5:'e'}

"""создайте копию словаря"""
dict1 = {"a":1, "b":2, 4:"c"}
dict2 = { k:v for k, v in dict1.items() }
# {"a":1, "b":2, 4:"c"}

"""поменяйте ключ и значение местами"""
dict1 = {"a":1, "b":2, 4:"c"}
dict2 = { v:k for k, v in dict1.items() }
# {1:"a", 2:"b", "c":4}

"""Дан словарь, где значения - список с числами, создайте новый словарь, где значения - сумма тех чисел"""
dict1 = {
    "a":[1,2,3,4,5],
    "b":[3,4,5,6,7],
    "c":[33,3,2,1,4]
}

dict2 = { key:sum(value) for key, value in dict1.items() }
# {"a": 15, "b": 25, "c": 43}


"==================================Вложенные Comprehensions====================="
"""Создайте словарь, где ключами будут числа от 1 до 10, а значениями списки от 1 до числа (который ключ)"""

dict_ = { i: list(range(1, i+1)) for i in range(1,6) }
# {1:[1], 2:[1,2], 3:[1,2,3], 4:[1,2,3,4], 5:[1,2,3,4,5]}

dict_ = { i: [j for j in range (1, i+1)] for i in range(1,6) }
# {1:[1], 2:[1,2], 3:[1,2,3], 4:[1,2,3,4], 5:[1,2,3,4,5]}

